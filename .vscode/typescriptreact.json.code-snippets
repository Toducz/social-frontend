{
	// Place your snippets for typescriptreact here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	"functional_component": {
		"prefix": "fc",
		"body": [
			"export default function $TM_FILENAME_BASE() {",
			"  return (<>",
			"    $0",
			"  </>);",
			"}",
      ""
		],
		"description": "Insert functional component"
	},
	"functional_component_with_props": {
		"prefix": "fcp",
		"body": [
			"type Props = {",
			"  $0",
			"};",
			"",
			"export default function $TM_FILENAME_BASE({ $0 }: Props) {",
			"  return (<>",
			"    ",
			"  </>);",
			"}",
      ""
		],
		"description": "Insert functional component with props"
	},
	"use_state_hook": {
		"prefix": "us",
		"body": [
			"const [$1, set${1/(.)/${1:/upcase}/}] = useState<$3>($2);",
			""
		],
		"description": "Insert useState hook"
	},
	"use_effect_hook": {
		"prefix": "ue",
		"body": [
			"useEffect(() => {",
			"  $1",
			"}, [$2]);",
			""
		],
		"description": "Insert useEffect hook"
	},
	"use_effect_async_hook": {
		"prefix": "uea",
		"body": [
			"useEffect(() => {",
			"  (async () => {",
			"    $1",
			"  })();",
			"}, [$2]);",
			""
		],
		"description": "Insert useEffect hook with async function"
	}
}
